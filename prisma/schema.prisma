// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  manager
  editor
  author
  subscriber
}

enum UserStatus {
  active
  inactive
  blocked
  deleted
}

enum Status {
  private
  draft
  publish
  deleted
}

model User {
  id            Int        @id @default(autoincrement())
  email         String     @unique
  password      String
  refresh_token String?
  username      String
  phone_number  String?
  status        UserStatus @default(active)
  role          Role       @default(subscriber)
  first_name    String?
  last_name     String?
  avatar        String?
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt

  Posts             Post[]     @relation("User")
  PostsUpdated      Post[]     @relation("UserUpdated")
  Media             Media[]
  Categories        Category[] @relation("User")
  CategoriesUpdated Category[] @relation("UserUpdated")

  @@map("vh_users")
}

model Post {
  id               Int      @id @default(autoincrement())
  title            String
  slug             String?
  description      String
  status           Status
  thumb            Int?
  images           String?
  content          String
  timestamp        DateTime
  order            Int?
  meta_title       String?
  meta_description String?
  meta_keywords    String?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  user_id          Int
  updated_by       Int

  UserUpdated  User           @relation("UserUpdated", fields: [updated_by], references: [id])
  User         User           @relation("User", fields: [user_id], references: [id])
  PostCategory PostCategory[]

  @@map("vh_posts")
}

model Category {
  id               Int      @id @default(autoincrement())
  parent_id        Int?
  name             String
  slug             String?
  description      String?
  status           Status
  thumb            Int?
  images           String?
  order            Int?
  meta_title       String?
  meta_description String?
  meta_keywords    String?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  user_id          Int
  updated_by       Int

  UserUpdated User @relation("UserUpdated", fields: [updated_by], references: [id])
  User        User @relation("User", fields: [user_id], references: [id])

  PostCategory PostCategory[]

  @@map("vh_categories")
}

model PostCategory {
  id          Int @id @default(autoincrement())
  post_id     Int
  category_id Int

  Post     Post     @relation(fields: [post_id], references: [id])
  Category Category @relation(fields: [category_id], references: [id])

  @@map("vh_post_category")
}

model Media {
  id          Int      @id @default(autoincrement())
  url         String
  url_cdn     String?
  title       String?
  alt         String?
  description String?
  user_id     Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  User User @relation(fields: [user_id], references: [id])

  @@map("vh_media")
}
